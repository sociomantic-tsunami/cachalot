#!/bin/sh
# Copyright dunnhumby Germany GmbH 2017.
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE.txt or copy at
# http://www.boost.org/LICENSE_1_0.txt)
set -xeu

# Get utility stuff
. ./util.sh

# Update apt and install base packages
apt_update_and_install_base_packages

# We install some basic packages first.
apt -y install build-essential bzip2 devscripts sudo less vim wget curl \
	adduser fakeroot openssh-client ruby-dev rubygems-integration jq git \
	python3 python-docutils python-pil python-pygments

# Update the whole system
apt -y full-upgrade

# Configure default Git username and e-mail
git config --system user.name "Cachalot Docker image"
git config --system user.email "tsunami@sociomantic.com"

# fpm installation is release-dependant
gem install $(gem_ver travis "$VERSION_TRAVIS")

# fpm installation is release-dependant
gem install $(gem_ver fpm "$VERSION_FPM")

# Get jfrog tool from Bintray
download_jfrog()
{
	{ set +x; } > /dev/null
	local ver="$1"
	local dst="/usr/local/bin/jfrog"

	# Get sha256 sum of the file
	local json=$(set -x; curl -sLkX GET \
		"https://api.bintray.com/packages/jfrog/jfrog-cli-go/jfrog-cli-linux-amd64/versions/$ver/files")
	# From the received array, select the object with the specific "path"
	# attribute, and from that object get the "sha256" attribute
	local sha256=$(echo "$json" | jq -r ".[] |
			select(.path == \"$ver/jfrog-cli-linux-amd64/jfrog\") |
			.sha256")

	# Get the file
	(set -x; curl -#LkX GET \
		"https://dl.bintray.com/jfrog/jfrog-cli-go/$ver/jfrog-cli-linux-amd64/jfrog" \
		> "$dst")

	# Check file's sha256 sum
	local sha256new="$(sha256sum "$dst" | cut -c1-64)"
	set -x
	test "$sha256new" = "$sha256"

	# Make it executable
	chmod a+x "$dst"
}
download_jfrog "$VERSION_JFROG"

# Create user that will be used to run tests and allow it to run sudo with
# no password:
useradd -g users -m cachalot
echo "cachalot ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/cachalot
id cachalot

# Remove common temporary files and packages
cleanup
