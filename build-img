#!/bin/sh
set -eu

print_usage() {
	cat <<HELP
Usage: $0 IMAGE [BUILD ARGS]

Builds a docker IMAGE. IMAGE is expected to be in the form:
  ORG/REPO:DIST-TAG
Ehere ORG is the DockerHub organization, REPO is the name of the DockerHub
image repository, TAG is the logical tag for the image version, and DIST is the
distro to use as the base Ubuntu. The Dockerfile file name is expected to be in
the form REPO.Dockerfile and a temporary Dockerfile will be generated based on
this one.

Optional BUILD_ARGS are passed blindly to docker build.

Examples:

# builds sociomantictsunami/base:v2-trusty image based on base.Dockerfile
$0 sociomantictsunami/base:v2-trusty
HELP
}

# Parse arguments
test $# -lt 2 || {
	print_usage >&2
	echo >&2
	echo "Incorrect number of arguments" >&2
	exit 2
}

image="$1"
shift

# Calculated options
re='^\([^/]\+\)/\([^:]\+\):\([^-]\+\)-\(.*\)$'
org="$(echo $image | sed "s|$re|\\1|")"
repo="$(echo $image | sed "s|$re|\\2|")"
dist="$(echo $image | sed "s|$re|\\3|")"
tag="$(echo $image | sed "s|$re|\\4|")"

# Create temporary Dockerfile
dockerfile="$repo.Dockerfile"
tmpdockerfile="$dockerfile.$tag-$dist.tmp"
cp "$dockerfile" "$tmpdockerfile"
trap "ret=\$?; rm -f '$tmpdockerfile'; exit \$ret" INT TERM QUIT EXIT
sed -i 's/^\(FROM\s\+.\+\)$/\1:'"$dist"'/;
	/'"$org"'/ s/^\(FROM\s\+.\+\)$/\1-'"$tag"'/' "$tmpdockerfile"

# Build image
( set -x ; docker build -t "$image" -f "$tmpdockerfile" "$@" . )
